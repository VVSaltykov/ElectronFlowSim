// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/dbcommunication.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ElectronFlowSim.AnalysisService.GRPC.Protos {

  /// <summary>Holder for reflection information generated from Protos/dbcommunication.proto</summary>
  public static partial class DbcommunicationReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/dbcommunication.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DbcommunicationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxQcm90b3MvZGJjb21tdW5pY2F0aW9uLnByb3RvIoADCgxJbnB1dERhdGFE",
            "VE8SCgoCaWcYASABKAUSDAoEbm1hcxgCIAEoBRIKCgJrbRgDIAEoBRIKCgJr",
            "cBgEIAEoBRIKCgJrcRgFIAEoBRIMCgRrcGo2GAYgASgFEgoKAmlrGAcgASgF",
            "EgoKAmoxGAggASgFEgsKA2ljchgJIAEoBRILCgNqY3IYCiABKAUSCQoBchgL",
            "IAMoARIJCgF6GAwgAygBEgkKAXUYDSADKAESCQoBbBgOIAMoBRIKCgJyaxgP",
            "IAEoARIMCgR1dGVwGBAgASgBEgwKBHprb24YESABKAESDAoEYWtsMRgSIAEo",
            "ARIKCgJ1MBgTIAEoARIOCgZ1ZWt2aXAYFCADKAESDQoFYm5vcm0YFSABKAES",
            "CwoDYWJtGBYgASgBEgoKAmJtGBcgAygBEgsKA2FpaxgYIAMoARIKCgJodBgZ",
            "IAEoARIKCgJkehgaIAEoARIMCgRkdG9rGBsgASgBEgsKA2hxMRgcIAEoARIM",
            "CgRhcjFzGB0gASgBIg8KDUVtcHR5UmVzcG9uc2UyaAoPREJDb21tdW5pY2F0",
            "aW9uEisKCkNyZWF0ZVNhdmUSDS5JbnB1dERhdGFEVE8aDi5FbXB0eVJlc3Bv",
            "bnNlEigKB0dldFNhdmUSDi5FbXB0eVJlc3BvbnNlGg0uSW5wdXREYXRhRFRP",
            "Qi6qAitFbGVjdHJvbkZsb3dTaW0uQW5hbHlzaXNTZXJ2aWNlLkdSUEMuUHJv",
            "dG9zYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ElectronFlowSim.AnalysisService.GRPC.Protos.InputDataDTO), global::ElectronFlowSim.AnalysisService.GRPC.Protos.InputDataDTO.Parser, new[]{ "Ig", "Nmas", "Km", "Kp", "Kq", "Kpj6", "Ik", "J1", "Icr", "Jcr", "R", "Z", "U", "L", "Rk", "Utep", "Zkon", "Akl1", "U0", "Uekvip", "Bnorm", "Abm", "Bm", "Aik", "Ht", "Dz", "Dtok", "Hq1", "Ar1S" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ElectronFlowSim.AnalysisService.GRPC.Protos.EmptyResponse), global::ElectronFlowSim.AnalysisService.GRPC.Protos.EmptyResponse.Parser, null, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class InputDataDTO : pb::IMessage<InputDataDTO>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InputDataDTO> _parser = new pb::MessageParser<InputDataDTO>(() => new InputDataDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InputDataDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ElectronFlowSim.AnalysisService.GRPC.Protos.DbcommunicationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InputDataDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InputDataDTO(InputDataDTO other) : this() {
      ig_ = other.ig_;
      nmas_ = other.nmas_;
      km_ = other.km_;
      kp_ = other.kp_;
      kq_ = other.kq_;
      kpj6_ = other.kpj6_;
      ik_ = other.ik_;
      j1_ = other.j1_;
      icr_ = other.icr_;
      jcr_ = other.jcr_;
      r_ = other.r_.Clone();
      z_ = other.z_.Clone();
      u_ = other.u_.Clone();
      l_ = other.l_.Clone();
      rk_ = other.rk_;
      utep_ = other.utep_;
      zkon_ = other.zkon_;
      akl1_ = other.akl1_;
      u0_ = other.u0_;
      uekvip_ = other.uekvip_.Clone();
      bnorm_ = other.bnorm_;
      abm_ = other.abm_;
      bm_ = other.bm_.Clone();
      aik_ = other.aik_.Clone();
      ht_ = other.ht_;
      dz_ = other.dz_;
      dtok_ = other.dtok_;
      hq1_ = other.hq1_;
      ar1S_ = other.ar1S_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InputDataDTO Clone() {
      return new InputDataDTO(this);
    }

    /// <summary>Field number for the "ig" field.</summary>
    public const int IgFieldNumber = 1;
    private int ig_;
    /// <summary>
    /// число границ пушки
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Ig {
      get { return ig_; }
      set {
        ig_ = value;
      }
    }

    /// <summary>Field number for the "nmas" field.</summary>
    public const int NmasFieldNumber = 2;
    private int nmas_;
    /// <summary>
    /// число эквипотенциалей
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Nmas {
      get { return nmas_; }
      set {
        nmas_ = value;
      }
    }

    /// <summary>Field number for the "km" field.</summary>
    public const int KmFieldNumber = 3;
    private int km_;
    /// <summary>
    /// число задаваемых значений продольной составляющей магнитного поля на оси симметрии пушки
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Km {
      get { return km_; }
      set {
        km_ = value;
      }
    }

    /// <summary>Field number for the "kp" field.</summary>
    public const int KpFieldNumber = 4;
    private int kp_;
    /// <summary>
    /// число ячеек параболической сетки потенциалов в поперечном направлении
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Kp {
      get { return kp_; }
      set {
        kp_ = value;
      }
    }

    /// <summary>Field number for the "kq" field.</summary>
    public const int KqFieldNumber = 5;
    private int kq_;
    /// <summary>
    /// число ячеек сетки потенциалов в продольном направлении
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Kq {
      get { return kq_; }
      set {
        kq_ = value;
      }
    }

    /// <summary>Field number for the "kpj6" field.</summary>
    public const int Kpj6FieldNumber = 6;
    private int kpj6_;
    /// <summary>
    /// число поперечных ячеек (предельное)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Kpj6 {
      get { return kpj6_; }
      set {
        kpj6_ = value;
      }
    }

    /// <summary>Field number for the "ik" field.</summary>
    public const int IkFieldNumber = 7;
    private int ik_;
    /// <summary>
    /// номер катода (всегда 1. Когда пушки с полыми катода, то другое)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Ik {
      get { return ik_; }
      set {
        ik_ = value;
      }
    }

    /// <summary>Field number for the "j1" field.</summary>
    public const int J1FieldNumber = 8;
    private int j1_;
    /// <summary>
    /// параметр, определяющий число дополнительных электронов для многоскоростного пучка
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int J1 {
      get { return j1_; }
      set {
        j1_ = value;
      }
    }

    /// <summary>Field number for the "icr" field.</summary>
    public const int IcrFieldNumber = 9;
    private int icr_;
    /// <summary>
    /// номер первой итерации
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Icr {
      get { return icr_; }
      set {
        icr_ = value;
      }
    }

    /// <summary>Field number for the "jcr" field.</summary>
    public const int JcrFieldNumber = 10;
    private int jcr_;
    /// <summary>
    /// количество итераций
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Jcr {
      get { return jcr_; }
      set {
        jcr_ = value;
      }
    }

    /// <summary>Field number for the "r" field.</summary>
    public const int RFieldNumber = 11;
    private static readonly pb::FieldCodec<double> _repeated_r_codec
        = pb::FieldCodec.ForDouble(90);
    private readonly pbc::RepeatedField<double> r_ = new pbc::RepeatedField<double>();
    /// <summary>
    /// значения точек радиальная координата по оси ординат
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> R {
      get { return r_; }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 12;
    private static readonly pb::FieldCodec<double> _repeated_z_codec
        = pb::FieldCodec.ForDouble(98);
    private readonly pbc::RepeatedField<double> z_ = new pbc::RepeatedField<double>();
    /// <summary>
    /// значения точек продольная координата по оси абсцисс
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> Z {
      get { return z_; }
    }

    /// <summary>Field number for the "u" field.</summary>
    public const int UFieldNumber = 13;
    private static readonly pb::FieldCodec<double> _repeated_u_codec
        = pb::FieldCodec.ForDouble(106);
    private readonly pbc::RepeatedField<double> u_ = new pbc::RepeatedField<double>();
    /// <summary>
    /// массив потенциалов в узловых точках (нормирован)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> U {
      get { return u_; }
    }

    /// <summary>Field number for the "l" field.</summary>
    public const int LFieldNumber = 14;
    private static readonly pb::FieldCodec<int> _repeated_l_codec
        = pb::FieldCodec.ForInt32(114);
    private readonly pbc::RepeatedField<int> l_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// количество интервалов, на которые разбит контур
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> L {
      get { return l_; }
    }

    /// <summary>Field number for the "rk" field.</summary>
    public const int RkFieldNumber = 15;
    private double rk_;
    /// <summary>
    /// радиус кривизны катода
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Rk {
      get { return rk_; }
      set {
        rk_ = value;
      }
    }

    /// <summary>Field number for the "utep" field.</summary>
    public const int UtepFieldNumber = 16;
    private double utep_;
    /// <summary>
    /// наибольшее значение поперечной тепловой скорости
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Utep {
      get { return utep_; }
      set {
        utep_ = value;
      }
    }

    /// <summary>Field number for the "zkon" field.</summary>
    public const int ZkonFieldNumber = 17;
    private double zkon_;
    /// <summary>
    /// максимальная координата (постоянная) конец счета траектории
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Zkon {
      get { return zkon_; }
      set {
        zkon_ = value;
      }
    }

    /// <summary>Field number for the "akl1" field.</summary>
    public const int Akl1FieldNumber = 18;
    private double akl1_;
    /// <summary>
    /// радиус пролетного канала
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Akl1 {
      get { return akl1_; }
      set {
        akl1_ = value;
      }
    }

    /// <summary>Field number for the "u0" field.</summary>
    public const int U0FieldNumber = 19;
    private double u0_;
    /// <summary>
    /// нормирующий потенциал
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double U0 {
      get { return u0_; }
      set {
        u0_ = value;
      }
    }

    /// <summary>Field number for the "uekvip" field.</summary>
    public const int UekvipFieldNumber = 20;
    private static readonly pb::FieldCodec<double> _repeated_uekvip_codec
        = pb::FieldCodec.ForDouble(162);
    private readonly pbc::RepeatedField<double> uekvip_ = new pbc::RepeatedField<double>();
    /// <summary>
    /// массив эквипотенциалов
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> Uekvip {
      get { return uekvip_; }
    }

    /// <summary>Field number for the "bnorm" field.</summary>
    public const int BnormFieldNumber = 21;
    private double bnorm_;
    /// <summary>
    /// нормирующее магнитное поле
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Bnorm {
      get { return bnorm_; }
      set {
        bnorm_ = value;
      }
    }

    /// <summary>Field number for the "abm" field.</summary>
    public const int AbmFieldNumber = 22;
    private double abm_;
    /// <summary>
    /// кэоффициент корректировки магнитного поля
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Abm {
      get { return abm_; }
      set {
        abm_ = value;
      }
    }

    /// <summary>Field number for the "bm" field.</summary>
    public const int BmFieldNumber = 23;
    private static readonly pb::FieldCodec<double> _repeated_bm_codec
        = pb::FieldCodec.ForDouble(186);
    private readonly pbc::RepeatedField<double> bm_ = new pbc::RepeatedField<double>();
    /// <summary>
    /// массив значений магнитных полей
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> Bm {
      get { return bm_; }
    }

    /// <summary>Field number for the "aik" field.</summary>
    public const int AikFieldNumber = 24;
    private static readonly pb::FieldCodec<double> _repeated_aik_codec
        = pb::FieldCodec.ForDouble(194);
    private readonly pbc::RepeatedField<double> aik_ = new pbc::RepeatedField<double>();
    /// <summary>
    /// массив значений тока режим заданного тока
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> Aik {
      get { return aik_; }
    }

    /// <summary>Field number for the "ht" field.</summary>
    public const int HtFieldNumber = 25;
    private double ht_;
    /// <summary>
    /// шаг интегрирования по времени
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Ht {
      get { return ht_; }
      set {
        ht_ = value;
      }
    }

    /// <summary>Field number for the "dz" field.</summary>
    public const int DzFieldNumber = 26;
    private double dz_;
    /// <summary>
    /// расстояние от точек старта до поверхности
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Dz {
      get { return dz_; }
      set {
        dz_ = value;
      }
    }

    /// <summary>Field number for the "dtok" field.</summary>
    public const int DtokFieldNumber = 27;
    private double dtok_;
    /// <summary>
    /// расстояние от катода до поверхности, где ток считается по закону 3/2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Dtok {
      get { return dtok_; }
      set {
        dtok_ = value;
      }
    }

    /// <summary>Field number for the "hq1" field.</summary>
    public const int Hq1FieldNumber = 28;
    private double hq1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Hq1 {
      get { return hq1_; }
      set {
        hq1_ = value;
      }
    }

    /// <summary>Field number for the "ar1s" field.</summary>
    public const int Ar1SFieldNumber = 29;
    private double ar1S_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Ar1S {
      get { return ar1S_; }
      set {
        ar1S_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InputDataDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InputDataDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ig != other.Ig) return false;
      if (Nmas != other.Nmas) return false;
      if (Km != other.Km) return false;
      if (Kp != other.Kp) return false;
      if (Kq != other.Kq) return false;
      if (Kpj6 != other.Kpj6) return false;
      if (Ik != other.Ik) return false;
      if (J1 != other.J1) return false;
      if (Icr != other.Icr) return false;
      if (Jcr != other.Jcr) return false;
      if(!r_.Equals(other.r_)) return false;
      if(!z_.Equals(other.z_)) return false;
      if(!u_.Equals(other.u_)) return false;
      if(!l_.Equals(other.l_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Rk, other.Rk)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Utep, other.Utep)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Zkon, other.Zkon)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Akl1, other.Akl1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(U0, other.U0)) return false;
      if(!uekvip_.Equals(other.uekvip_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Bnorm, other.Bnorm)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Abm, other.Abm)) return false;
      if(!bm_.Equals(other.bm_)) return false;
      if(!aik_.Equals(other.aik_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Ht, other.Ht)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Dz, other.Dz)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Dtok, other.Dtok)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Hq1, other.Hq1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Ar1S, other.Ar1S)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Ig != 0) hash ^= Ig.GetHashCode();
      if (Nmas != 0) hash ^= Nmas.GetHashCode();
      if (Km != 0) hash ^= Km.GetHashCode();
      if (Kp != 0) hash ^= Kp.GetHashCode();
      if (Kq != 0) hash ^= Kq.GetHashCode();
      if (Kpj6 != 0) hash ^= Kpj6.GetHashCode();
      if (Ik != 0) hash ^= Ik.GetHashCode();
      if (J1 != 0) hash ^= J1.GetHashCode();
      if (Icr != 0) hash ^= Icr.GetHashCode();
      if (Jcr != 0) hash ^= Jcr.GetHashCode();
      hash ^= r_.GetHashCode();
      hash ^= z_.GetHashCode();
      hash ^= u_.GetHashCode();
      hash ^= l_.GetHashCode();
      if (Rk != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Rk);
      if (Utep != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Utep);
      if (Zkon != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Zkon);
      if (Akl1 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Akl1);
      if (U0 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(U0);
      hash ^= uekvip_.GetHashCode();
      if (Bnorm != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Bnorm);
      if (Abm != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Abm);
      hash ^= bm_.GetHashCode();
      hash ^= aik_.GetHashCode();
      if (Ht != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Ht);
      if (Dz != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Dz);
      if (Dtok != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Dtok);
      if (Hq1 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Hq1);
      if (Ar1S != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Ar1S);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ig != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Ig);
      }
      if (Nmas != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Nmas);
      }
      if (Km != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Km);
      }
      if (Kp != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Kp);
      }
      if (Kq != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Kq);
      }
      if (Kpj6 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Kpj6);
      }
      if (Ik != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Ik);
      }
      if (J1 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(J1);
      }
      if (Icr != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Icr);
      }
      if (Jcr != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Jcr);
      }
      r_.WriteTo(output, _repeated_r_codec);
      z_.WriteTo(output, _repeated_z_codec);
      u_.WriteTo(output, _repeated_u_codec);
      l_.WriteTo(output, _repeated_l_codec);
      if (Rk != 0D) {
        output.WriteRawTag(121);
        output.WriteDouble(Rk);
      }
      if (Utep != 0D) {
        output.WriteRawTag(129, 1);
        output.WriteDouble(Utep);
      }
      if (Zkon != 0D) {
        output.WriteRawTag(137, 1);
        output.WriteDouble(Zkon);
      }
      if (Akl1 != 0D) {
        output.WriteRawTag(145, 1);
        output.WriteDouble(Akl1);
      }
      if (U0 != 0D) {
        output.WriteRawTag(153, 1);
        output.WriteDouble(U0);
      }
      uekvip_.WriteTo(output, _repeated_uekvip_codec);
      if (Bnorm != 0D) {
        output.WriteRawTag(169, 1);
        output.WriteDouble(Bnorm);
      }
      if (Abm != 0D) {
        output.WriteRawTag(177, 1);
        output.WriteDouble(Abm);
      }
      bm_.WriteTo(output, _repeated_bm_codec);
      aik_.WriteTo(output, _repeated_aik_codec);
      if (Ht != 0D) {
        output.WriteRawTag(201, 1);
        output.WriteDouble(Ht);
      }
      if (Dz != 0D) {
        output.WriteRawTag(209, 1);
        output.WriteDouble(Dz);
      }
      if (Dtok != 0D) {
        output.WriteRawTag(217, 1);
        output.WriteDouble(Dtok);
      }
      if (Hq1 != 0D) {
        output.WriteRawTag(225, 1);
        output.WriteDouble(Hq1);
      }
      if (Ar1S != 0D) {
        output.WriteRawTag(233, 1);
        output.WriteDouble(Ar1S);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ig != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Ig);
      }
      if (Nmas != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Nmas);
      }
      if (Km != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Km);
      }
      if (Kp != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Kp);
      }
      if (Kq != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Kq);
      }
      if (Kpj6 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Kpj6);
      }
      if (Ik != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Ik);
      }
      if (J1 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(J1);
      }
      if (Icr != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Icr);
      }
      if (Jcr != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Jcr);
      }
      r_.WriteTo(ref output, _repeated_r_codec);
      z_.WriteTo(ref output, _repeated_z_codec);
      u_.WriteTo(ref output, _repeated_u_codec);
      l_.WriteTo(ref output, _repeated_l_codec);
      if (Rk != 0D) {
        output.WriteRawTag(121);
        output.WriteDouble(Rk);
      }
      if (Utep != 0D) {
        output.WriteRawTag(129, 1);
        output.WriteDouble(Utep);
      }
      if (Zkon != 0D) {
        output.WriteRawTag(137, 1);
        output.WriteDouble(Zkon);
      }
      if (Akl1 != 0D) {
        output.WriteRawTag(145, 1);
        output.WriteDouble(Akl1);
      }
      if (U0 != 0D) {
        output.WriteRawTag(153, 1);
        output.WriteDouble(U0);
      }
      uekvip_.WriteTo(ref output, _repeated_uekvip_codec);
      if (Bnorm != 0D) {
        output.WriteRawTag(169, 1);
        output.WriteDouble(Bnorm);
      }
      if (Abm != 0D) {
        output.WriteRawTag(177, 1);
        output.WriteDouble(Abm);
      }
      bm_.WriteTo(ref output, _repeated_bm_codec);
      aik_.WriteTo(ref output, _repeated_aik_codec);
      if (Ht != 0D) {
        output.WriteRawTag(201, 1);
        output.WriteDouble(Ht);
      }
      if (Dz != 0D) {
        output.WriteRawTag(209, 1);
        output.WriteDouble(Dz);
      }
      if (Dtok != 0D) {
        output.WriteRawTag(217, 1);
        output.WriteDouble(Dtok);
      }
      if (Hq1 != 0D) {
        output.WriteRawTag(225, 1);
        output.WriteDouble(Hq1);
      }
      if (Ar1S != 0D) {
        output.WriteRawTag(233, 1);
        output.WriteDouble(Ar1S);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Ig != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ig);
      }
      if (Nmas != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Nmas);
      }
      if (Km != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Km);
      }
      if (Kp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Kp);
      }
      if (Kq != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Kq);
      }
      if (Kpj6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Kpj6);
      }
      if (Ik != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ik);
      }
      if (J1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(J1);
      }
      if (Icr != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Icr);
      }
      if (Jcr != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Jcr);
      }
      size += r_.CalculateSize(_repeated_r_codec);
      size += z_.CalculateSize(_repeated_z_codec);
      size += u_.CalculateSize(_repeated_u_codec);
      size += l_.CalculateSize(_repeated_l_codec);
      if (Rk != 0D) {
        size += 1 + 8;
      }
      if (Utep != 0D) {
        size += 2 + 8;
      }
      if (Zkon != 0D) {
        size += 2 + 8;
      }
      if (Akl1 != 0D) {
        size += 2 + 8;
      }
      if (U0 != 0D) {
        size += 2 + 8;
      }
      size += uekvip_.CalculateSize(_repeated_uekvip_codec);
      if (Bnorm != 0D) {
        size += 2 + 8;
      }
      if (Abm != 0D) {
        size += 2 + 8;
      }
      size += bm_.CalculateSize(_repeated_bm_codec);
      size += aik_.CalculateSize(_repeated_aik_codec);
      if (Ht != 0D) {
        size += 2 + 8;
      }
      if (Dz != 0D) {
        size += 2 + 8;
      }
      if (Dtok != 0D) {
        size += 2 + 8;
      }
      if (Hq1 != 0D) {
        size += 2 + 8;
      }
      if (Ar1S != 0D) {
        size += 2 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InputDataDTO other) {
      if (other == null) {
        return;
      }
      if (other.Ig != 0) {
        Ig = other.Ig;
      }
      if (other.Nmas != 0) {
        Nmas = other.Nmas;
      }
      if (other.Km != 0) {
        Km = other.Km;
      }
      if (other.Kp != 0) {
        Kp = other.Kp;
      }
      if (other.Kq != 0) {
        Kq = other.Kq;
      }
      if (other.Kpj6 != 0) {
        Kpj6 = other.Kpj6;
      }
      if (other.Ik != 0) {
        Ik = other.Ik;
      }
      if (other.J1 != 0) {
        J1 = other.J1;
      }
      if (other.Icr != 0) {
        Icr = other.Icr;
      }
      if (other.Jcr != 0) {
        Jcr = other.Jcr;
      }
      r_.Add(other.r_);
      z_.Add(other.z_);
      u_.Add(other.u_);
      l_.Add(other.l_);
      if (other.Rk != 0D) {
        Rk = other.Rk;
      }
      if (other.Utep != 0D) {
        Utep = other.Utep;
      }
      if (other.Zkon != 0D) {
        Zkon = other.Zkon;
      }
      if (other.Akl1 != 0D) {
        Akl1 = other.Akl1;
      }
      if (other.U0 != 0D) {
        U0 = other.U0;
      }
      uekvip_.Add(other.uekvip_);
      if (other.Bnorm != 0D) {
        Bnorm = other.Bnorm;
      }
      if (other.Abm != 0D) {
        Abm = other.Abm;
      }
      bm_.Add(other.bm_);
      aik_.Add(other.aik_);
      if (other.Ht != 0D) {
        Ht = other.Ht;
      }
      if (other.Dz != 0D) {
        Dz = other.Dz;
      }
      if (other.Dtok != 0D) {
        Dtok = other.Dtok;
      }
      if (other.Hq1 != 0D) {
        Hq1 = other.Hq1;
      }
      if (other.Ar1S != 0D) {
        Ar1S = other.Ar1S;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ig = input.ReadInt32();
            break;
          }
          case 16: {
            Nmas = input.ReadInt32();
            break;
          }
          case 24: {
            Km = input.ReadInt32();
            break;
          }
          case 32: {
            Kp = input.ReadInt32();
            break;
          }
          case 40: {
            Kq = input.ReadInt32();
            break;
          }
          case 48: {
            Kpj6 = input.ReadInt32();
            break;
          }
          case 56: {
            Ik = input.ReadInt32();
            break;
          }
          case 64: {
            J1 = input.ReadInt32();
            break;
          }
          case 72: {
            Icr = input.ReadInt32();
            break;
          }
          case 80: {
            Jcr = input.ReadInt32();
            break;
          }
          case 90:
          case 89: {
            r_.AddEntriesFrom(input, _repeated_r_codec);
            break;
          }
          case 98:
          case 97: {
            z_.AddEntriesFrom(input, _repeated_z_codec);
            break;
          }
          case 106:
          case 105: {
            u_.AddEntriesFrom(input, _repeated_u_codec);
            break;
          }
          case 114:
          case 112: {
            l_.AddEntriesFrom(input, _repeated_l_codec);
            break;
          }
          case 121: {
            Rk = input.ReadDouble();
            break;
          }
          case 129: {
            Utep = input.ReadDouble();
            break;
          }
          case 137: {
            Zkon = input.ReadDouble();
            break;
          }
          case 145: {
            Akl1 = input.ReadDouble();
            break;
          }
          case 153: {
            U0 = input.ReadDouble();
            break;
          }
          case 162:
          case 161: {
            uekvip_.AddEntriesFrom(input, _repeated_uekvip_codec);
            break;
          }
          case 169: {
            Bnorm = input.ReadDouble();
            break;
          }
          case 177: {
            Abm = input.ReadDouble();
            break;
          }
          case 186:
          case 185: {
            bm_.AddEntriesFrom(input, _repeated_bm_codec);
            break;
          }
          case 194:
          case 193: {
            aik_.AddEntriesFrom(input, _repeated_aik_codec);
            break;
          }
          case 201: {
            Ht = input.ReadDouble();
            break;
          }
          case 209: {
            Dz = input.ReadDouble();
            break;
          }
          case 217: {
            Dtok = input.ReadDouble();
            break;
          }
          case 225: {
            Hq1 = input.ReadDouble();
            break;
          }
          case 233: {
            Ar1S = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Ig = input.ReadInt32();
            break;
          }
          case 16: {
            Nmas = input.ReadInt32();
            break;
          }
          case 24: {
            Km = input.ReadInt32();
            break;
          }
          case 32: {
            Kp = input.ReadInt32();
            break;
          }
          case 40: {
            Kq = input.ReadInt32();
            break;
          }
          case 48: {
            Kpj6 = input.ReadInt32();
            break;
          }
          case 56: {
            Ik = input.ReadInt32();
            break;
          }
          case 64: {
            J1 = input.ReadInt32();
            break;
          }
          case 72: {
            Icr = input.ReadInt32();
            break;
          }
          case 80: {
            Jcr = input.ReadInt32();
            break;
          }
          case 90:
          case 89: {
            r_.AddEntriesFrom(ref input, _repeated_r_codec);
            break;
          }
          case 98:
          case 97: {
            z_.AddEntriesFrom(ref input, _repeated_z_codec);
            break;
          }
          case 106:
          case 105: {
            u_.AddEntriesFrom(ref input, _repeated_u_codec);
            break;
          }
          case 114:
          case 112: {
            l_.AddEntriesFrom(ref input, _repeated_l_codec);
            break;
          }
          case 121: {
            Rk = input.ReadDouble();
            break;
          }
          case 129: {
            Utep = input.ReadDouble();
            break;
          }
          case 137: {
            Zkon = input.ReadDouble();
            break;
          }
          case 145: {
            Akl1 = input.ReadDouble();
            break;
          }
          case 153: {
            U0 = input.ReadDouble();
            break;
          }
          case 162:
          case 161: {
            uekvip_.AddEntriesFrom(ref input, _repeated_uekvip_codec);
            break;
          }
          case 169: {
            Bnorm = input.ReadDouble();
            break;
          }
          case 177: {
            Abm = input.ReadDouble();
            break;
          }
          case 186:
          case 185: {
            bm_.AddEntriesFrom(ref input, _repeated_bm_codec);
            break;
          }
          case 194:
          case 193: {
            aik_.AddEntriesFrom(ref input, _repeated_aik_codec);
            break;
          }
          case 201: {
            Ht = input.ReadDouble();
            break;
          }
          case 209: {
            Dz = input.ReadDouble();
            break;
          }
          case 217: {
            Dtok = input.ReadDouble();
            break;
          }
          case 225: {
            Hq1 = input.ReadDouble();
            break;
          }
          case 233: {
            Ar1S = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class EmptyResponse : pb::IMessage<EmptyResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EmptyResponse> _parser = new pb::MessageParser<EmptyResponse>(() => new EmptyResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EmptyResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ElectronFlowSim.AnalysisService.GRPC.Protos.DbcommunicationReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EmptyResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EmptyResponse(EmptyResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EmptyResponse Clone() {
      return new EmptyResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EmptyResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EmptyResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EmptyResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
